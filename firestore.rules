rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /products/{productId} {
      allow read: if true;
      // Allow write if the user is the vendor
      allow create, update: if request.auth != null && request.resource.data.vendorId == request.auth.uid;
      // Allow delete only if the user is the vendor
      allow delete: if request.auth != null && resource.data.vendorId == request.auth.uid;
    }

    match /orders/{orderId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.vendorId || request.auth.uid == resource.data.riderId);
        allow create: if request.auth != null && request.auth.uid == request.resource.data.buyerId;
        allow update: if request.auth != null && (request.auth.uid == resource.data.riderId || request.auth.uid == resource.data.vendorId);
    }
    
    match /schools/{schoolId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
